repositories {
    mavenCentral()
    jcenter()
    maven { url 'http://repo1.maven.org/maven2' }
}

apply plugin: 'com.android.library'
// https://docs.gradle.org/current/userguide/publishing_maven.html
// http://www.flexlabs.org/2013/06/using-local-aar-android-library-packages-in-gradle-builds
apply plugin: 'maven'

def libVersion = "2.8.0"
def libArtifactId = 'android-image-cropper'

android {

    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName libVersion
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        debug {

        }
        release {

        }
        innerTest {
            //...
            matchingFallbacks = ['debug', 'release']
        }
        /*release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            // shrinkResources true
            multiDexEnabled true
        }*/
    }
}

configurations {
    deployerJars
}

dependencies {
    // Maven publishing
    deployerJars 'org.apache.maven.wagon:wagon-http:2.2'
    api "com.android.support:appcompat-v7:28.0.0"
    implementation "com.android.support:exifinterface:28.0.0"
}

// For Maven Repository submitting
task uploadRelease(type: Upload) {
    configuration = configurations.archives
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: releaseUrl) {
            authentication(userName: repoUsername, password: repoPassword)
        }
        pom.version = libVersion
        pom.artifactId = libArtifactId
        pom.groupId = "com.viafirma"
    }
}

// This is the task to be used for every release.
task releaseVersion(dependsOn: ['clean', 'build', 'uploadRelease'])
build.mustRunAfter clean
uploadRelease.mustRunAfter build

